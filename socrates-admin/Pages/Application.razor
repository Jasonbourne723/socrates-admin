@page "/application"

<PageTitle>应用</PageTitle>

@using Newtonsoft.Json;
@using Services;


@if (_pageList == null)
{
    <p>loading</p>
}
else
{
    // 新增/编辑对话框
    <Modal Title="@_title"
           Visible="@_visible"
           OnOk="@HandleOk"
           OnCancel="@HandleCancel"
           ConfirmLoading="@_confirmLoading">
        <Form Model="@_entity"
              LabelColSpan="8"
              WrapperColSpan="16">
            <FormItem Label="名称">
                <Input @bind-Value="@context.name" />
            </FormItem>
            <FormItem Label="描述">
                <Input @bind-Value="@context.description" />
            </FormItem>
            <FormItem Label="登录回调URL">
                <Input @bind-Value="@context.callback_url" />
            </FormItem>
        </Form>
    </Modal>



    <Table TItem="ApplicationDto" PageSize="5" Total="_pageList.TotalCount" DataSource="_pageList.Rows">
        <TitleTemplate>
            <Flex Justify="end" Gap="10">
                <Button Type="primary" OnClick="HandleCreate">新增</Button>
            </Flex>
        </TitleTemplate>
        <ColumnDefinitions Context="row">
            <Selection />
            <GenerateColumns Definitions="@((n,c) => { c.Filterable = true; c.Sortable = true; })" />
            <ActionColumn Title="Action">
                <a @onclick="()=>{ HandleUpdate(row);}">Edit</a>
                <Popconfirm Title="Are you sure?" OkText="确认" CancelText="取消" OnConfirm="async ()=>{await HandleDelete(row);}">
                    <a>Delete</a>
                </Popconfirm>
            </ActionColumn>
        </ColumnDefinitions>
    </Table>
}

@code {

    @inject IApplicationService _ApplicationService

    private PageList<ApplicationDto> _pageList;
    private int _pageIndex = 1;
    private int _pageSize = 10;


    //对话框相关属性
    private bool _visible = false;
    private bool _confirmLoading = false;
    private string _title = "";
    private ApplicationDto _entity;

    protected override async Task OnInitializedAsync()
    {
        await GetPageList();
    }

    protected async Task GetPageList()
    {
        _pageList = await _ApplicationService.PageList(_pageIndex, _pageSize);
    }

    private void HandleCreate(MouseEventArgs e)
    {
        _entity = new ApplicationDto();
        _title = "新增";
        _visible = true;
    }

    private void HandleUpdate(ApplicationDto ApplicationDto)
    {
        _entity = ApplicationDto;
        _title = "编辑";
        _visible = true;
    }

    private async Task HandleDelete(ApplicationDto roleDto)
    {
        await _ApplicationService.Delete(roleDto.id);
        await GetPageList();
    }


    private async Task HandleOk(MouseEventArgs e)
    {
        _confirmLoading = true;
        StateHasChanged();

        if (_title == "新增")
        {
            await _ApplicationService.Create(new Models.Request.CreateApplicationDto()
                {
                    name = _entity.name,
                    description = _entity.description,
                    callback_url = _entity.callback_url
                });
        }
        else // 编辑
        {
            await _ApplicationService.Update(new Models.Request.UpdateApplicationDto()
                {
                    id = _entity.id,
                    name = _entity.name,
                    description = _entity.description,
                    callback_url = _entity.callback_url
                });
        }

        await GetPageList();
        _visible = false;
        _confirmLoading = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
    }

}
