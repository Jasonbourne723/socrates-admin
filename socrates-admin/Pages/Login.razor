@page "/login"
@using Models.Request;
@using Services;
@layout AuthLayout
@inject NavigationManager navigationManager

<PageTitle>登录</PageTitle>

<div class="back">
    <div style="position: fixed; left: 10%; top: 50%; transform: translateY(-50%); padding:30px;">
        <Card Bordered="true" Title=@("登录中心") Style="width:400px" Hoverable="true">
            <Body>
                <Form Model="@_loginDto" OnFinish="LoginAsync">
                    <FormItem>
                        <AntDesign.Input Placeholder="请输入手机号" Size="large" @bind-Value="@context.mobile">
                            <Prefix><Icon Type="user" /></Prefix>
                        </AntDesign.Input>
                    </FormItem>
                    <FormItem>
                        <AntDesign.Input Placeholder="请输入密码" Size="large" @bind-Value="@context.password" Type="password">
                            <Prefix><Icon Type="lock" /></Prefix>
                        </AntDesign.Input>
                    </FormItem>
                    <Space Direction="DirectionVHType.Vertical" Style="width:100%">
                        <SpaceItem>
                            <Button Type="primary" HtmlType="submit" Class="submit" Size="large" Block>登&nbsp;录</Button>
                        </SpaceItem>
                        <SpaceItem>
                            <div class="other">
                                <a class="register" href="/register">注册账户</a>
                                <a style="float: right;">
                                    忘记密码
                                </a>
                            </div>
                        </SpaceItem>
                    </Space>
                </Form>
            </Body>
        </Card>
    </div>
</div>

<style>
    .back {
        background-image: url(Login.png);
        background-size: cover; /* 背景图片会根据页面大小自动调整 */
        background-position: center; /* 背景图片居中显示 */
        background-repeat: no-repeat; /* 防止图片重复 */
        height: 100vh; /* 让页面高度占满视口 */
        margin: 0; /* 去掉默认的页面边距 */
    }
</style>

@code {
    @inject IAuthService _authService

    private LoginDto _loginDto = new();
    private RegisterDto _registerDto = new();

    protected bool _visible = false;


    protected async Task LoginAsync(EditContext context)
    {
        await _authService.Login(_loginDto);
    }
}
